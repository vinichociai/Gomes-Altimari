<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Visualizar Providências</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/cadastrarProvidencias.css">
    <link rel="icon" type="image/png" href="img/imagemlogo.png">
</head>

<body>
    <%- include('./partials/navbar.ejs') %>


        <div class="container">
            <h1 class="page-title" style="color: orange;">Cadastrar Providências</h1>
            <div class="row">
                <div class="col-12">
                    <h4 style="color: rgb(98, 98, 97);">Para iniciar a analise siga com uma das opções de leitura de
                        publicação</h4>

                    <div class="row mt-5">
                        <div class="col-6">
                            <div class="row">
                                <p>Análise de Arquivo WORD (Versões antigas não são lidos)</p>
                                <input type="file" id="docWord" />
                            </div>

                        </div>

                        <div class="col-6">
                            <div class="row">
                                <p>Análise de um Arquivo PDF.</p>
                                 <input type="file" id="docPDF" />
                            </div>
                        </div>
                    </div>


                    <div class="row mt-5">
                        <form id="formPublicacao">
                            <div class="row">
                                <h2>Análise de Publicação:</h2>
                                <textarea class="form-control publicacao" rows="10" name="publicacao" id="publicacao"
                                    placeholder="Se prefirir não importar arquivo, cole diretamente sua publicação aqui."></textarea>

                            </div>
                            <div class="row">
                                <div class="col-12 mt-2 mb-5 text-center">
                                    <button type="submit" class="btn btn-success">Fazer
                                        Análise</button>
                                </div>
                            </div>
                        </form>
                        <div  id="loading" style="display: none; margin-top: -30px">Carregando...</div>

                        <div style="display: none; margin-top: -20px;" id="espacoAppendProvidencias" class="row mt-5 mb-5">
                            <h2>Cadastro de Providências</h2>
                        </div>
                        <button style="display: none;" id="saveButton" class="btn btn-primary">Salvar</button>

                    </div>



                </div>






            </div>
        </div>

</body>


<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
    integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
    crossorigin="anonymous"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.4.2/mammoth.browser.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js"></script>
<script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4="
    crossorigin="anonymous"></script>



<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
    integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
    crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.5/socket.io.js"
    integrity="sha512-luMnTJZ7oEchNDZAtQhgjomP1eZefnl82ruTH/3Oj/Yu5qYtwL7+dVRccACS/Snp1lFXq188XFipHKYE75IaQQ=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
    document.getElementById('docWord').addEventListener('change', function (event) {
        $("#publicacao").val('')
        var reader = new FileReader();
        reader.onload = function (event) {
            mammoth.extractRawText({ arrayBuffer: event.target.result })
                .then(function (result) {
                    publicacao = result.value
                    $('#modalAnalisePublicação').modal('show');
                    $("#publicacao").val(publicacao)
                })
                .catch(function (err) {
                    console.error(err.message);
                });
        };
        reader.readAsArrayBuffer(event.target.files[0]);
    });



    document.getElementById('docPDF').addEventListener('change', async (event) => {
        $("#publicacao").val('')
        const file = event.target.files[0];
        if (file && file.type === 'application/pdf') {
            const fileReader = new FileReader();
            fileReader.onload = async function () {
                const typedarray = new Uint8Array(this.result);

                const pdf = await pdfjsLib.getDocument({ data: typedarray }).promise;
                let pdfText = '';

                for (let i = 1; i <= pdf.numPages; i++) {
                    const page = await pdf.getPage(i);
                    const textContent = await page.getTextContent();
                    const pageText = textContent.items.map(item => item.str).join(' ');
                    pdfText += pageText + '\n';
                }

                $('#modalAnalisePublicação').modal('show');
                $("#publicacao").val(pdfText)
            };
            fileReader.readAsArrayBuffer(file);
        } else {
            alert('Por favor, escolha um arquivo Pdf');
        }
    });


    document.getElementById("formPublicacao").addEventListener("submit", async function (event) {
        event.preventDefault();

        const publicacao = document.getElementById("publicacao").value;

        const loadingElement = document.getElementById("loading");
        loadingElement.style.display = 'block';

        try {
            const response = await fetch('/analise-publicacao', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ publicacao })
            });

            if (response.ok) {
                console.log("Requisição bem-sucedida.");
            } else {
                console.error("Erro na requisição.");
            }

        } catch (error) {
            console.error('Erro ao enviar a publicação:', error);
        } finally {
            document.getElementById("saveButton").style.display = 'block'
            document.getElementById("espacoAppendProvidencias").style.display = 'block'
            loadingElement.style.display = 'none';
        }
    });



    const socket = io('http://localhost:3000');
    socket.on('connect', () => {
        console.log('Connected to server');
    });

    const providencias = [
        {
            tituloProvidencia: "Título 1",
            dataCriacaoProvidencia: "2024-08-19",
            descricaoProvidencia: "Descrição 1"
        },
        {
            tituloProvidencia: "Título 2",
            dataCriacaoProvidencia: "2024-08-20",
            descricaoProvidencia: "Descrição 2"
        }
    ];

    var advogados

    $.ajax({
        url: '/advogados',
        type: 'GET',
        success: function(response){
            advogados = response

        },
        error: function(jqXHR, textStatus, errorThrown){
           console.log(errorThrown)
        }
    }) 




    socket.on('providencias', (providencias) => {
        console.log(providencias);
        document.getElementById("loading").style.display = 'none';

        const container = document.getElementById('espacoAppendProvidencias');

        function adicionarProvidencias(providencias) {
            providencias.forEach((providencia, index) => {
                const advogadosOptions = advogados.map(advogado => `
                        <option value="${advogado.id}">${advogado.nomeCompleto}</option>
                    `).join('');

                const html = `
            <div class="col-3 d-flex align-items-center justify-content-center espacoCheck">
                <input class="form-check-input providenciaCheckbox" type="checkbox" id="providenciaCheckbox-${index}" data-id="${index}">
            </div>
            <div class="col-9 espacoProvidencia">
                <div class="row">
                    <div>
                        <h5 style="margin-top: 10px;">Título:</h5>
                        <input class="inputTitulo form-control" type="text" value="${providencia.tituloProvidencia}" data-id="${index}">
                        <input class="inputDataCriacao form-control" type="text" value="${providencia.dataCriacaoProvidencia}" data-id="${index}">
                    </div>
                </div>
                <div class="row">
                    <div>
                        <h5>Descrição:</h5>
                        <textarea class="inputDescricao form-control" rows="4" data-id="${index}">${providencia.descricaoProvidencia}</textarea>
                    </div>
                </div>

                 <div class="row">
                    <div>
                         <h5>Escolha de Compromisso ou Tarefa</h5>
                            <div class="group">
                                <label>
                                    <input type="checkbox" class="comp-tarefa-checkbox" data-index="${index}" value="compromisso"> Compromisso
                                </label>
                                <label>
                                    <input type="checkbox" checked class="comp-tarefa-checkbox" data-index="${index}" value="tarefa"> Tarefa
                                </label>
                                
                                <div class="campo dataConclusao" data-index="${index}">
                                    <label for="data-${index}">Data:</label>
                                    <input type="date" id="data-${index}" class="campoDataConclusao">
                                    
                                    <div class="horaConclusao" style="display: none;">
                                        <label for="hora-${index}">Hora:</label>
                                        <input type="time" id="hora-${index}" class="campoHoraConclusao">
                                    </div>
                                </div>
                            </div>
                        </div> 
                    </div>

                     <div class="row">
                         <div>
                            <h5>Vincular Advogado:</h5>
                             <select id="advogado-${index}" class="form-control advogadoVinculado">
                                 ${advogadosOptions}
                             </select>
                         </div>
                     </div>
                     <div class="row mb-4">
                         <div>
                            <h5>Observação:</h5>
                             <textarea class="observacao" id="observacao-${index}" class="form-control" rows="4"></textarea>
                         </div>
                     </div>
                </div>
                
            </div>
        `;

                const div = document.createElement('div');
                div.className = 'row mb-3';
                div.innerHTML = html;

                container.appendChild(div);
            });
        }

        adicionarProvidencias(providencias);
    });

    socket.on('disconnect', () => {
        console.log('Disconnected from server');
    });


    document.getElementById('saveButton').addEventListener('click', function () {
        var selectedProvidencias = [];

        document.querySelectorAll('#espacoAppendProvidencias .row').forEach(row => {
            const checkbox = row.querySelector('.form-check-input');
            if (checkbox && checkbox.checked) {
                const titulo = row.querySelector('.inputTitulo').value;
                const descricao = row.querySelector('.inputDescricao').value;
                const dataCriacao = row.querySelector('.inputDataCriacao').value;

                let ehCompromisso = 0;
                const compromissoCheckbox = row.querySelector('input[value="compromisso"]');
                const tarefaCheckbox = row.querySelector('input[value="tarefa"]');

                if (compromissoCheckbox && compromissoCheckbox.checked) {
                    ehCompromisso = 1;
                } else if (tarefaCheckbox && tarefaCheckbox.checked) {
                    ehCompromisso = 0;
                }

                const observacao = row.querySelector('.observacao').value;
                const idAdvogadoVinculado = row.querySelector('.advogadoVinculado').value;
                const idAdvogadoCriador = 1
                const dataConclusao = row.querySelector('.campoDataConclusao').value;
                const horaConclusao = row.querySelector('.campoHoraConclusao').value;
                const concluido = 0

                selectedProvidencias.push({
                    tituloProvidencia: titulo,
                    descricaoProvidencia: descricao,
                    dataCriacaoProvidencia: dataCriacao,
                    ehCompromisso: ehCompromisso,
                    observacao: observacao,
                    idAdvogadoVinculado: idAdvogadoVinculado,
                    idAdvogadoCriador: idAdvogadoCriador,
                    dataConclusao: dataConclusao,
                    horaConclusao: horaConclusao,
                    concluido: concluido

                });
            }
        });

        if (selectedProvidencias.length == 0) {
            alert("selecione alguma providencia")
        }


        console.log("prov")
        console.log(selectedProvidencias)
        console.log("pov")

        var ehValido = true;

        selectedProvidencias.forEach(function (element) {
            if (element.ehCompromisso === 1) {
                if (element.tituloProvidencia === "" ||
                    element.descricaoProvidencia === "" ||
                    element.dataCriacaoProvidencia === "" ||
                    element.observacao === "" ||
                    element.idAdvogadoCriador === "" ||
                    element.idAdvogadoVinculado === "" ||
                    element.dataConclusao === "" ||
                    element.horaConclusao === "") {

                    alert("Preencha todos os campos para o compromisso.");
                    ehValido = false;
                }
            } else if (element.ehCompromisso === 0) {
                if (element.tituloProvidencia === "" ||
                    element.descricaoProvidencia === "" ||
                    element.dataCriacaoProvidencia === "" ||
                    element.observacao === "" ||
                    element.idAdvogadoCriador === "" ||
                    element.idAdvogadoVinculado === "" ||
                    element.dataConclusao === "") {

                    alert("Preencha todos os campos para a tarefa.");
                    ehValido = false;
                }
            }
        });

        if (ehValido) {
            fetch('/cadastraProvidencias', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ selectedProvidencias: selectedProvidencias })
            })
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    if (data.success) {
                        alert(data.message);
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                });
        }



    });

    $(document).on('change', '.comp-tarefa-checkbox', function () {
        const index = $(this).data('index');
        const isChecked = $(this).is(':checked');
        const type = $(this).val();

        if (type === 'compromisso') {
            if (isChecked) {
                $(`.dataConclusao[data-index="${index}"] .horaConclusao`).show();
            } else {
                $(`.dataConclusao[data-index="${index}"] .horaConclusao`).hide();
            }
        } else if (type === 'tarefa') {
            if (isChecked) {
                $(`.dataConclusao[data-index="${index}"] .horaConclusao`).hide();
            }
        }

        // Garantir que somente um checkbox esteja selecionado por vez no mesmo grupo
        if (isChecked) {
            $(`.comp-tarefa-checkbox[data-index="${index}"]`).not(this).prop('checked', false);
        }
    });


</script>

</html>